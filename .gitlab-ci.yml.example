stages:
- build
- push
- execute_yaml_check
- execute_db_structure
- execute_asset_labels
- execute_run_cmd

variables:
  GIT_SUBMODULE_STRATEGY: none
  ACCOUNTING_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - echo ACCOUNTING_IMAGE - ${ACCOUNTING_IMAGE}

build:
  tags:
    - accounting
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  rules:
    - if: $RUN_CMD
      when: never
    - if: $CI_COMMIT_REF_NAME
  script:
    - docker build --pull -t $ACCOUNTING_IMAGE .

push:
  tags:
    - accounting
  stage: push
  rules:
    - if: $RUN_CMD
      when: never
    - if: $CI_COMMIT_REF_NAME
  script:
    - docker push $ACCOUNTING_IMAGE

execute_yaml_check:
  tags:
    - accounting
  stage: execute_yaml_check
  rules:
    - if: $RUN_CMD
      when: never
    - if: $CI_COMMIT_REF_NAME
  script:
    - docker pull $ACCOUNTING_IMAGE
    - |
      docker run --rm \
        --mount type=bind,source=/opt/sysadmws/accounting/log,target=/opt/sysadmws/accounting/log \
        --mount type=bind,source=/etc/timezone,target=/etc/timezone \
        --mount type=bind,source=/etc/localtime,target=/etc/localtime \
        $ACCOUNTING_IMAGE /opt/sysadmws/accounting/accounting.py --yaml-check

execute_db_structure:
  tags:
    - accounting
  stage: execute_db_structure
  rules:
    - if: $RUN_CMD
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - docker pull $ACCOUNTING_IMAGE
    - |
      docker run --rm \
        --env GL_PG_DB_HOST \
        --env GL_PG_DB_PORT \
        --env GL_PG_DB_NAME \
        --env GL_PG_DB_USER \
        --env GL_PG_DB_PASS \
        --env GL_ADMIN_PRIVATE_TOKEN \
        --env GL_BOT_PRIVATE_TOKEN \
        --env GL_USER_PRIVATE_TOKEN \
        --env GL_URL \
        --env PG_DB_HOST \
        --env PG_DB_PORT \
        --env PG_DB_NAME \
        --env PG_DB_USER \
        --env PG_DB_PASS \
        --env SA_SECRETS_FILE \
        --env SSH_DU_S_M_KEYFILE \
        --env SSH_DU_S_M_USER \
        --mount type=bind,source=/opt/sysadmws/accounting/log,target=/opt/sysadmws/accounting/log \
        --mount type=bind,source=/etc/timezone,target=/etc/timezone \
        --mount type=bind,source=/etc/localtime,target=/etc/localtime \
        $ACCOUNTING_IMAGE /opt/sysadmws/accounting/accounting.py --debug --db-structure

execute_asset_labels:
  tags:
    - accounting
  stage: execute_asset_labels
  rules:
    - if: $RUN_CMD
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - docker pull $ACCOUNTING_IMAGE
    - |
      docker run --rm \
        --env GL_PG_DB_HOST \
        --env GL_PG_DB_PORT \
        --env GL_PG_DB_NAME \
        --env GL_PG_DB_USER \
        --env GL_PG_DB_PASS \
        --env GL_ADMIN_PRIVATE_TOKEN \
        --env GL_BOT_PRIVATE_TOKEN \
        --env GL_USER_PRIVATE_TOKEN \
        --env GL_URL \
        --env PG_DB_HOST \
        --env PG_DB_PORT \
        --env PG_DB_NAME \
        --env PG_DB_USER \
        --env PG_DB_PASS \
        --env SA_SECRETS_FILE \
        --env SSH_DU_S_M_KEYFILE \
        --env SSH_DU_S_M_USER \
        --mount type=bind,source=/opt/sysadmws/accounting/log,target=/opt/sysadmws/accounting/log \
        --mount type=bind,source=/etc/timezone,target=/etc/timezone \
        --mount type=bind,source=/etc/localtime,target=/etc/localtime \
        $ACCOUNTING_IMAGE /opt/sysadmws/accounting/accounting.py --debug --asset-labels

execute_run_cmd:
  tags:
    - accounting
  stage: execute_run_cmd
  rules:
    - if: $RUN_CMD && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - docker pull $ACCOUNTING_IMAGE
    - |
      docker run --rm \
        --env GL_PG_DB_HOST \
        --env GL_PG_DB_PORT \
        --env GL_PG_DB_NAME \
        --env GL_PG_DB_USER \
        --env GL_PG_DB_PASS \
        --env GL_ADMIN_PRIVATE_TOKEN \
        --env GL_BOT_PRIVATE_TOKEN \
        --env GL_USER_PRIVATE_TOKEN \
        --env GL_URL \
        --env PG_DB_HOST \
        --env PG_DB_PORT \
        --env PG_DB_NAME \
        --env PG_DB_USER \
        --env PG_DB_PASS \
        --env SA_SECRETS_FILE \
        --env SSH_DU_S_M_KEYFILE \
        --env SSH_DU_S_M_USER \
        --mount type=bind,source=/opt/sysadmws/accounting/log,target=/opt/sysadmws/accounting/log \
        --mount type=bind,source=/etc/timezone,target=/etc/timezone \
        --mount type=bind,source=/etc/localtime,target=/etc/localtime \
        $ACCOUNTING_IMAGE $RUN_CMD
